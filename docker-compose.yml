version: "1.1"

volumes:
  ipc: {}
  node-data: {}
  db-sync-data: {}
  postgres-data: {}
  ogmios-data: {}
  kupo-data: {}

services:
  cardano-node:
    image: ghcr.io/intersectmbo/cardano-node:9.1.0
    network_mode: "host"
    container_name: partnerchains-cardano-node
    environment:
      - NETWORK=${NETWORK}
      - CARDANO_NODE_SOCKET_PATH=/ipc/node.socket
    volumes:
      - ipc:/ipc
      - node-data:/data
    restart: on-failure
    healthcheck:
      # Ping the EKG port to see if it responds.
      # Assuming if EKG isn't up then the rest of cardano-node isn't either.
      test: ["CMD-SHELL", "curl -f 127.0.0.1:12788 || exit 1"]
      interval: 60s
      timeout: 10s
      retries: 5
    depends_on:
      # Depend on the dozzle log monitor being active
      dozzle:
        condition: service_started

  postgres:
    image: postgres:14.10-alpine
    shm_size: 1g
    container_name: partnerchains-postgres
    environment:
      - POSTGRES_LOGGING=true
      - POSTGRES_DB_FILE=/run/secrets/postgres_db
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
      - POSTGRES_USER_FILE=/run/secrets/postgres_user
    secrets:
      - postgres_password
      - postgres_user
      - postgres_db
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - ${POSTGRES_PORT:-5432}:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: on-failure
    #command: ${POSTGRES_ARGS:--c maintenance_work_mem=1GB -c max_parallel_maintenance_workers=4}
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    depends_on:
      # Depend on the dozzle log monitor being active
      dozzle:
        condition: service_started

  db-sync:
    image: ghcr.io/intersectmbo/cardano-db-sync:latest
    environment:
      - NETWORK=${NETWORK}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - RESTORE_SNAPSHOT=${RESTORE_SNAPSHOT:-}
      - RESTORE_RECREATE_DB=N
      - DB_SYNC_CONFIG=/config/config.json
      - EXTRA_DB_SYNC_ARGS=${EXTRA_DB_SYNC_ARGS:-}
      - DISABLE_LEDGER=${DB_SYNC_DISABLE_LEDGER:-0}
    container_name: partnerchains-db-sync
    depends_on:
      # Depend on both services to be healthy before starting.
      cardano-node:
        condition: service_healthy
      postgres:
        condition: service_healthy
    secrets:
      - postgres_password
      - postgres_user
      - postgres_db
    volumes:
      - ./cardano-configurations/network/${NETWORK}/cardano-db-sync:/config
      - db-sync-data:/var/lib/cexplorer
      - ipc:/node-ipc
    restart: on-failure
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

  ogmios:
    image: cardanosolutions/ogmios:latest
    container_name: partnerchains-ogmios
    build:
      context: .
      target: ogmios
      cache_from: [cardanosolutions/ogmios:latest]
    restart: on-failure
    platform: linux/amd64
    command: [
      "--host", "0.0.0.0",
      "--node-socket", "/ipc/node.socket",
      "--node-config", "/config/config.json"
    ]
    environment:
      - DATA_DIR=/data
    depends_on:
      cardano-node:
        condition: service_healthy
    ports:
      -  ${OGMIOS_PORT:-1337}:1337
    user: "0:0"
    volumes:
      - ipc:/ipc
      - ogmios-data:/data
      - ./cardano-configurations/network/${NETWORK}/cardano-node:/config
      - ./cardano-configurations/network/${NETWORK}/genesis:/genesis

  kupo:
    image: cardanosolutions/kupo:v2.9.0
    container_name: partnerchains-kupo
    command: '--host 0.0.0.0 --node-config /config/config.json --node-socket /ipc/node.socket --workdir /data/db --match "*" --since origin'
    ports:
      - ${KUPO_PORT:-1442}:1442
    volumes:
      - ipc:/ipc
      - kupo-data:/data
      - ./cardano-configurations/network/${NETWORK}/cardano-node:/config
      - ./cardano-configurations/network/${NETWORK}/genesis:/genesis
    depends_on:
      cardano-node:
        condition: service_healthy
    restart: on-failure

  dozzle:
    container_name: partnerchains-dozzle
    image: amir20/dozzle:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 8080:8080

  pc-node:
    container_name: partnerchains-node
    image: ghcr.io/input-output-hk/partner-chains/partner-chains-node:latest
    volumes:
      - node-data:/data
    depends_on:
      cardano-node:
        condition: service_healthy

secrets:
  postgres_db:
    file: ./cardano-db-sync/config/secrets/postgres_db
  postgres_password:
    file: ./cardano-db-sync/config/secrets/postgres_password
  postgres_user:
    file: ./cardano-db-sync/config/secrets/postgres_user
